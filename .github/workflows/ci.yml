name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [api, web, worker]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npx turbo run lint --filter=apps/${{ matrix.app }}
      - name: Test
        run: npx turbo run test --filter=apps/${{ matrix.app }}
      - name: Build
        run: npx turbo run build --filter=apps/${{ matrix.app }}
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Retrieve secrets from Key Vault
        id: kv
        uses: azure/get-keyvault-secrets@v1
        with:
          keyvault: ${{ secrets.KEY_VAULT_NAME }}
          secrets: |
            WEBAPP_NAME_API
            WEBAPP_NAME_WEB
            WEBAPP_NAME_WORKER
            CONNECTION_STRING
      - name: Set environment from Key Vault
        run: |
          case "${{ matrix.app }}" in
            api) echo "AZURE_WEBAPP_NAME=${{ steps.kv.outputs.WEBAPP_NAME_API }}" >> $GITHUB_ENV ;;
            web) echo "AZURE_WEBAPP_NAME=${{ steps.kv.outputs.WEBAPP_NAME_WEB }}" >> $GITHUB_ENV ;;
            worker) echo "AZURE_WEBAPP_NAME=${{ steps.kv.outputs.WEBAPP_NAME_WORKER }}" >> $GITHUB_ENV ;;
          esac
          echo "CONNECTION_STRING=${{ steps.kv.outputs.CONNECTION_STRING }}" >> $GITHUB_ENV
      - name: Deploy
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: apps/${{ matrix.app }}/dist
